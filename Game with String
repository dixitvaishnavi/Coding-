//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String s = in.readLine();
            int k = Integer.parseInt(in.readLine());
            
            Solution ob = new Solution();
            System.out.println(ob.minValue(s, k));
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution{
    static int minValue(String s, int k){
        // code here
         PriorityQueue<Integer> pq=new PriorityQueue<>(Collections.reverseOrder());
        HashMap<Character,Integer> map=new HashMap<>();
        int ans=0;
        
        
        // store the frequencies of each character in hashmap
        for(int i=0;i<s.length();i++){
            map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
        }
        // adding the frequencies to the priority queue 
        for(char ch:map.keySet()){
            pq.add(map.get(ch));
        }
        
        // remove the val and decrment to 1 each time 
        while(pq.size()>0 && k>0){
            int val=pq.remove();
            val--;
            pq.add(val);
            k--;
        }
        // now calculate the ans by remaining element of the priority queue
        while(pq.size()>0){
            ans+=Math.pow(pq.remove(),2);
        }
        return ans;
    }
}
